% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nlsregression.R
\name{nlsregression}
\alias{nlsregression}
\title{nlsregression}
\usage{
nlsregression(func, y, x, z=NULL, startvalues=NULL, weight=NULL,
weighting=T, xlab=NULL,
ylab="y",main=NULL,z_plot_lines=NULL,weightcolorpoints=TRUE,
plot_x_function=function(x){x},toPlot=TRUE,...)
}
\arguments{
\item{func}{function that shall be fitted. Function should contain the
dependent variable y and and the independent variable x, eventually a second
independent variable z. All other unknowns are treated as parameters that
are estimated.}

\item{y}{dependent variable,vector}

\item{x}{independent variable,vector}

\item{z}{optional independent variable,vector}

\item{startvalues}{the optimization algorithm may require starting values
for the fitting procedure. provide them in a list with the parameter names:
e.g. list(a=3,b=2)}

\item{weight}{optional weight,vector}

\item{weighting}{???}

\item{xlab}{name of x axis in plot}

\item{ylab}{name of y axis in plot}

\item{main}{plot function main argument}

\item{z_plot_lines}{vector>1 of values for z you want to be plotted into the
graph}

\item{weightcolorpoints}{if TRUE, the points are clustered into three
quantiles according to their weight and coloured lighter for low weights.}

\item{plot_x_function}{allows logarithmic or other x-scale. Just enter
plot_x_function=log or plot_x_function=log10. Only changes the picture, not
the regression!}

\item{toPlot}{to plot or not}

\item{...}{will be passed on to function nls}
}
\value{
A nice picture and regression parameters or eventually some errors.
}
\description{
Creates regression parameter estimates and plots with any function you want
that has no more than two independent variables
}
\examples{
\dontrun{
x=1:10
y=(1:10)^2+1
z=c(10:1)

# one independent variable
nlsregression(func=y~a*x+b,y=y,x=x,startvalues=list(a=1,b=1))
# two independent variables
nlsregression(func=y~a*x^1.1+b*z+c*x,y=y,x=x,z=z,startvalues=list(a=1,b=1,c=0))
# no fit because residuals are zero (excluded from the nls makers due
 to statistical reasons)
nlsregression(func=y~x^a+b,y=y,x=x,z=z,startvalues=list(a=1,b=1,c=0))

DNase1 <- subset(DNase, Run == 1)
DNase1$sets<- c(rep(1,8),rep(2,8))
nlsregression(func=y~a*x+b,y=DNase1$density,x=DNase1$conc,startvalues=list(a=1,b=1))
nlsregression(func=y~a*x+b*z,y=DNase1$density,x=DNase1$conc,z=DNase1$sets,
startvalues=list(a=0.1344,b=0.2597))
nlsregression(func=y~a*x+b*z,y=DNase1$density,x=DNase1$conc,z=DNase1$sets,
startvalues=list(a=0.1344,b=0.2597),plot_x_function=log)
}
}
\author{
Benjamin Leon Bodirsky, Susanne Rolinski
}
